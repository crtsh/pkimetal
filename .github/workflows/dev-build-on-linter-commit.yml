name: Scheduled check and build on dependency updates

on:
  schedule:
    # Run Hourly
    - cron: '0 * * * *'
  workflow_dispatch:
  
jobs:
  check_release:
    runs-on: ubuntu-latest
    name: Daily check for new zlint release

    steps:
    - name: Checkout this repo
      uses: actions/checkout@v4

    - name: Setup git
      run: |
          git config --global user.email "gh@pkimet.al"
          git config --global user.name "PKIMetal"

    - name: Fetch all branches
      run: git fetch origin

    - name: Run update_dependencies.sh
      run: chmod +x update_dependencies.sh; ./update_dependencies.sh

    - name: Check for changes
      id: check_changes
      run: |
        git fetch origin main
        if [[ $(git diff --name-only origin/main | grep 'dev_go.mod' ) ]]; then
          echo "dev_go.mod has changed"
          echo "dev_files_changed=true" >> $GITHUB_ENV
        else
          echo "dev_go.mod has not changed"
          echo "dev_files_changed=false" >> $GITHUB_ENV
        fi

    - name: Checkout auto-dev-update branch
      if: env.dev_files_changed == 'true'
      run: |
          # Check if the branch already exists on the remote
          if git ls-remote --heads origin auto-dev-update | grep auto-dev-update; then
            echo "Branch auto-dev-update already exists. Checking out and pulling updates."
            git checkout auto-dev-update
            git pull origin auto-dev-update
          else
            echo "Branch auto-dev-update does not exist. Creating and pushing it."
            git checkout -b auto-dev-update
          fi

    - name: Create Pull Request
      if: env.dev_files_changed == 'true'
      uses: peter-evans/create-pull-request@v6
      with:
        add-paths: |
          dev_go.*
        token: ${{ secrets.GITHUB_TOKEN }}
        base: main
        branch: auto-dev-update
        title: "Dependency Update"
        body: "This pull request was automatically created due to a linter update."

    - name: Authenticate GitHub CLI
      if: env.dev_files_changed == 'true'
      run: gh auth login --with-token <<< "${{ secrets.GITHUB_TOKEN }}"
        
    - name: Auto-Merge PR
      if: env.dev_files_changed == 'true'
      run: |
          gh pr merge -d -m
